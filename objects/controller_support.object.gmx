<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.has_joy=0 

if joystick_exists(0)=false{i_have_joy=0 }else
{
i_have_joy=1
}

alarm[0]=60
//
dir=0
jump=0
shoot=0
aim=0
aim_target=0
global._joyaim=0

global.shoot_tapped=0




global.jump_pressed=0
global.jump_released=0
global.shoot_pressed=0
global.shoot_released=0

global.reload_pressed=0
global.reload_released=0
global.drop_pressed=0
global.drop_released=0
global.item_pressed=0
global.item_released=0

global.joy_dash_left=0
global.joy_dash_right=0

global.melee_pressed=0
global.melee_released=0

global.cycle_left_pressed=0
global.cycle_left_released=0
global.cycle_right_pressed=0
global.cycle_right_released=0


dash_left=0
dash_right=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if i_have_joy=0
{
    if gamepad_is_connected(0){i_have_joy=1 t=instance_create(x,y,drama_filter)  t.txt="Controller found" global.has_joy=0}
}
else
{
    if gamepad_is_connected(0)=false{i_have_joy=0 t=instance_create(x,y,drama_filter)  t.txt="Controller lost"  global.has_joy=0}
}
alarm[0]=60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if i_have_joy=1{if gamepad_is_connected(0)=false{i_have_joy=0 global.has_joy=0}}


if global.has_joy=0{global._joyaim=0}

if i_have_joy=0 {exit}

if global.rumble&gt;0
{
global.rumble-=1
gamepad_set_vibration(0,global.rumble_power,global.rumble_power)
}
else
{
gamepad_set_vibration(0,0,0)
}


if abs(joystick_ypos(0))&gt;0.25{global.has_joy=1}
dir=joystick_xpos(0)
global.joy_dash_right=0
global.joy_dash_left=0

if abs(dir)&gt;0.25{global.has_joy=1}


global.joy_dash_right=0
global.joy_dash_left=0
if gamepad_button_check(0,gp_stickl)
{
if gamepad_axis_value(0,gp_axislh) &lt;-0.5{if dash_left=0{dash_left=1 global.joy_dash_left=1}}//left
if gamepad_axis_value(0,gp_axislh) &gt;0.5{if dash_right=0{dash_right=1 global.joy_dash_right=1}}//right
}
else
{
dash_left=0
dash_right=0
}
/*
if dash_right=0
{
if joystick_xpos(0) &gt;0.5 {dash_right=5}
}
else
{
if joystick_xpos(0) &lt;0.5{dash_right-=0.5}
else{if (dash_right&gt;0)and(dash_right&lt;5){global.joy_dash_right=1 dash_right=0}}
}



if dash_left=0
{
if joystick_xpos(0) &lt;-0.5 {dash_left=5}
}
else
{
if joystick_xpos(0) &gt;-0.5{dash_left-=0.5}
else{if (dash_left&gt;0)and(dash_left&lt;5){global.joy_dash_left=1 dash_left=0}}
}
*/


if abs(gamepad_axis_value(0,gp_axisrh))+abs(gamepad_axis_value(0,gp_axisrv))&gt;0.5
{
global._joyaim=1

//if abs(gamepad_axis_value(0,gp_axisrh))+abs(gamepad_axis_value(0,gp_axisrv))&gt;0.25
//{
aim_target=point_direction(0,0,gamepad_axis_value(0,gp_axisrh),gamepad_axis_value(0,gp_axisrv))
//}
aim=aim_target//-=angle_difference(aim,aim_target)/2
//aim=round(aim/11.75)*11.75
}
else
{
//global._joyaim=0
}


//Jump
//if joystick_check_button(0,1){global.has_joy=1 if jump=0{jump=1 global.jump_pressed=1}}else{jump=0 global.jump_pressed=0}
if ((gamepad_button_value(0,gp_shoulderlb)&gt;0.5)or(gamepad_button_check(0,gp_face1))){global.has_joy=1 if jump=0{jump=1 global.jump_pressed=1}}else{jump=0 global.jump_pressed=0}

//Shoot
if (gamepad_button_value(0,gp_shoulderrb)&gt;0.5)or(gamepad_button_check(0,gp_shoulderr)){global.has_joy=1 shoot=1 global.shoot_pressed=1 if global.shoot_tapped=0{global.shoot_tapped=1}else{global.shoot_tapped=2}}else{shoot=0 global.shoot_tapped=0 global.shoot_pressed=0}
//if joystick_check_button(0,6){global.has_joy=1 shoot=1 global.shoot_pressed=1 if global.shoot_tapped=0{global.shoot_tapped=1}else{global.shoot_tapped=2}}else{shoot=0 global.shoot_tapped=0 global.shoot_pressed=0}

//Drop Item
if gamepad_button_check(0,gp_face2) //B
{
global.has_joy=1
if global.drop_released=1{global.drop_pressed=1 global.drop_released=0}else{global.drop_pressed=0}
}
else{global.drop_released=1}

//Quick Swap
if gamepad_button_check(0,gp_face4) //Y
{
global.has_joy=1
if global.item_released=1{global.item_pressed=1 global.item_released=0}else{global.item_pressed=0}
}
else{global.item_released=1 global.item_pressed=0 }

//Reload / Interact
if gamepad_button_check(0,gp_face3) //x
{
global.has_joy=1
if global.reload_released=1{global.reload_pressed=1 global.reload_released=0}else{global.reload_pressed=0}
}
else{global.reload_released=1}

//melee
if gamepad_button_check(0,gp_stickr)
{
global.has_joy=1
if global.melee_released=1{global.melee_pressed=1 global.melee_released=0}else{global.melee_pressed=0}
}
else{global.melee_released=1}

//pause
if gamepad_button_check(0,gp_start)
{
global.has_joy=1
if global.pause_released=1{global.pause_pressed=1 global.pause_released=0}else{global.pause_pressed=0}
}
else{global.pause_released=1}

//stache power
if gamepad_button_check(0,gp_shoulderl)
{
global.has_joy=1
if global.special_released=1{global.special_pressed=1 global.special_released=0}else{global.special_pressed=0}
}
else{global.special_released=1}


//Cycle left
if gamepad_button_check(0,gp_padl)
{
global.has_joy=1
if global.cycle_left_released=1{global.cycle_left_pressed=1 global.cycle_left_released=0}else{global.cycle_left_pressed=0}
}
else{global.cycle_left_released=1 global.cycle_left_pressed=0 }

//Cycle right
if gamepad_button_check(0,gp_padr)
{
global.has_joy=1
if global.cycle_right_released=1{global.cycle_right_pressed=1 global.cycle_right_released=0}else{global.cycle_right_pressed=0}
}
else{global.cycle_right_released=1 global.cycle_right_pressed=0}



//move
if gamepad_axis_value(0,gp_axislh) &lt;-0.5{global.left_pressed=1}else{global.left_pressed=0}
if  gamepad_axis_value(0,gp_axislh)&gt;0.5{global.right_pressed=1}else{global.right_pressed=0}

//draw_text(x,y,string(dir)+"   -   "+string(jump)+"   -   "+string(shoot))

//draw_text(x,y+32,string(joystick_upos(0))+"   -   "+string(joystick_rpos(0))+"   -   "+string(aim))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*


if !window_has_focus(){exit}

show_debug_message("Event = " + async_load[? "event_type"]);        // Debug cocde so you can see which event has been
show_debug_message("Pad = " + string(async_load[? "pad_index"]));   // triggered and the pad associated with it.

switch(async_load[? "event_type"])             // Parse the async_load map to see which event has been triggered
{
case "gamepad discovered":                     // A game pad has been discovered
    var pad = async_load[? "pad_index"];       // Get the pad index value from the async_load map
    gamepad_set_axis_deadzone(pad, 0.5);       // Set the "deadzone" for the axis
    gamepad_set_button_threshold(pad, 0.1)      // Set the "threshold" for the triggers
    i_have_joy=1
    t=instance_create(x,y,drama_filter)  
    t.txt="Controller found" 
    global.has_joy=0;
    break;
case "gamepad lost":                           // Gamepad has been removed or otherwise disabled
    var pad = async_load[? "pad_index"];       // Get the pad index
    i_have_joy=0 
    t=instance_create(x,y,drama_filter)  
    t.txt="Controller lost"  
    global.has_joy=0
    break;
}


/*

if i_have_joy=0
{
    if joystick_exists(0){i_have_joy=1 t=instance_create(x,y,drama_filter)  t.txt="Controller found" global.has_joy=0}
}
else
{
    if joystick_exists(0)=false{i_have_joy=0 t=instance_create(x,y,drama_filter)  t.txt="Controller lost"  global.has_joy=0}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
