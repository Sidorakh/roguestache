<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-727379969</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible=false
snapped=0
size=0
trys=0
last_snapped=0
i=0
total_trys=0
joy_press=0
joy_pressed=0
joy_move_timer=0
global.has_joy=0
if joystick_exists(0)=false{i_have_joy=0 instance_destroy()}else
{
i_have_joy=1
}

alarm[0]=60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/*
if i_have_joy=0
{
    if joystick_exists(0){i_have_joy=1 t=instance_create(x,y,drama_filter)  t.txt="Controller found" global.has_joy=0}
}
else
{
    if joystick_exists(0)=false{i_have_joy=0 t=instance_create(x,y,drama_filter)  t.txt="Controller lost"  global.has_joy=0}
}
//alarm[0]=60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if i_have_joy=1{if gamepad_is_connected(0)=false{i_have_joy=0 global.has_joy=0}}

if global.has_joy=0{visible=false}else{visible=true}



if keyboard_check_pressed(vk_left){menu_cursor_move("left") visible=true}
if keyboard_check_pressed(vk_right){menu_cursor_move("right") visible=true}
if keyboard_check_pressed(vk_down){menu_cursor_move("down") visible=true}
if keyboard_check_pressed(vk_up){menu_cursor_move("up") visible=true}


if keyboard_check_pressed(vk_enter)


{
if place_meeting(x,y,obj_menu_button_parent)
{
with(instance_place(x,y,obj_menu_button_parent)){event_user(0)}
}
}



if i_have_joy=1
{




if global.rumble&gt;0
{
global.rumble-=1
gamepad_set_vibration(0,global.rumble_power,global.rumble_power)
}
else
{
gamepad_set_vibration(0,0,0)
}


//pause
if instance_exists(controller_support)=false
{
if gamepad_button_check(0,gp_start)
{
global.has_joy=1
if global.pause_released=1{global.pause_pressed=1 global.pause_released=0}else{global.pause_pressed=0}
}
else{global.pause_released=1}
}


if joy_move_timer&gt;0{joy_move_timer-=2}


if joy_move_timer=0
{

if joystick_check_button(0,1)=false
{
if joystick_xpos(0)&gt;0.75{menu_cursor_move("right") if instance_exists(title){title.mouse_timer=0  global.invis=0} global.has_joy=1  joy_move_timer=30 visible=true}
if joystick_xpos(0)&lt;-0.75{menu_cursor_move("left") if instance_exists(title){title.mouse_timer=0  global.invis=0} global.has_joy=1    joy_move_timer=30 visible=true}
if joystick_ypos(0)&gt;0.75{menu_cursor_move("down") if instance_exists(title){title.mouse_timer=0  global.invis=0} global.has_joy=1   joy_move_timer=30 visible=true}
if joystick_ypos(0)&lt;-0.75{menu_cursor_move("up") if instance_exists(title){title.mouse_timer=0  global.invis=0} global.has_joy=1   joy_move_timer=30 visible=true}
}

if joystick_check_button(0,2)
{
global.has_joy=1
if global.drop_released=1{global.drop_pressed=1 global.drop_released=0}else{global.drop_pressed=0}
}
else{global.drop_released=1}


joy_press=0

if global.has_joy=1
{
if joystick_check_button(0,1)
{
global.has_joy=1
if joy_pressed=0 {joy_press=1 joy_pressed=1 do_rumble(5,1)}
}
else
{
joy_pressed=0 joy_press=0
}


if joy_press=1
{
if place_meeting(x,y,obj_menu_button_parent)
{
with(instance_place(x,y,obj_menu_button_parent)){event_user(0) do_rumble(5,1)}
}
}
}

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if !window_has_focus(){exit}
if instance_exists(controller_support){exit}



show_debug_message("Event = " + async_load[? "event_type"]);        // Debug cocde so you can see which event has been
show_debug_message("Pad = " + string(async_load[? "pad_index"]));   // triggered and the pad associated with it.

switch(async_load[? "event_type"])             // Parse the async_load map to see which event has been triggered
{
case "gamepad discovered":                     // A game pad has been discovered
    var pad = async_load[? "pad_index"];       // Get the pad index value from the async_load map
    gamepad_set_axis_deadzone(pad, 0.5);       // Set the "deadzone" for the axis
    gamepad_set_button_threshold(pad, 0.1)      // Set the "threshold" for the triggers
    i_have_joy=1
    t=instance_create(x,y,drama_filter)  
    t.txt="Controller found" 
    global.has_joy=0;
    break;
case "gamepad lost":                           // Gamepad has been removed or otherwise disabled
    var pad = async_load[? "pad_index"];       // Get the pad index
    i_have_joy=0 t=instance_create(x,y,drama_filter)  
    t.txt="Controller lost"  
    global.has_joy=0
    break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>




if instance_exists(shade){exit}

if joy_pressed=0
{
draw_sprite_ext(spr_mouse,1,x,y,0.5,0.5,0,c_white,1)
}
else
{
draw_sprite_ext(spr_mouse,2,x,y,0.5,0.5,0,c_white,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.has_joy=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
