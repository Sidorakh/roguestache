<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>save_game()
global.dead=0
global.paused=0
global.sound_x=0
global.sound_y=0
global.sound_z=0

global.down_pressed=0
global.up_pressed=0
global.left_pressed=0
global.right_pressed=0
global.jump_pressed=0
global.shoot_pressed=0
global.aim_left=0
global.aim_right=0
global.aim_up=0
global.aim_down=0
instance_create(0,0,light_controler)
global.leveldone=0
xp_bar=0
global.x_wind=-3
global.y_wind=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if global.xp_i_have&gt;0

xp_bar=(global.xp_i_have/global.xp_i_need)*100


draw_sprite(spr_lifebar,global.life/10,+4,+4)
draw_sprite(spr_ammobar,global.ammo/10,+95,+4)
draw_sprite(spr_exp_bar,0,+4,+21)

draw_set_color(c_green)
draw_rectangle(+38,+24,+38+xp_bar,+34,0)
draw_set_color(c_lime)
draw_rectangle(+38,+24,+38+xp_bar,+29,0)
draw_set_color(c_white)
draw_set_font(fnt_speech)
draw_set_halign(fa_left)

draw_text(+160,+26,": "+string(global.xp_level))
//34 3  global._xp_level=1

draw_set_halign(fa_right)




/*
if room=room_level_lab
{
draw_text(+view_wview[0]-4,+4,"Area: "+string(global.level_im_on))
draw_text(+view_wview[0]-4,+16,"Kills: "+string(global.total_kills))
draw_set_font(fnt_words)
draw_set_halign(fa_left)
if global.my_sec&lt;10{draw_text(+8,+42,"Time: "+string(global.my_min)+":0"+string(global.my_sec))}
else{draw_text(+8,+42,"Time: "+string(global.my_min)+":"+string(global.my_sec))}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
if global.xp_i_have&gt;0

xp_bar=(global.xp_i_have/global.xp_i_need)*100


draw_sprite(spr_lifebar,global.life/10,view_xview[0]+4,view_yview[0]+4)
draw_sprite(spr_ammobar,global.ammo/10,view_xview[0]+95,view_yview[0]+4)
draw_sprite(spr_exp_bar,0,view_xview[0]+4,view_yview[0]+21)

draw_set_color(c_green)
draw_rectangle(view_xview[0]+38,view_yview[0]+24,view_xview[0]+38+xp_bar,view_yview[0]+34,0)
draw_set_color(c_lime)
draw_rectangle(view_xview[0]+38,view_yview[0]+24,view_xview[0]+38+xp_bar,view_yview[0]+29,0)
draw_set_color(c_white)
draw_set_font(fnt_speech)
draw_set_halign(fa_left)

draw_text(view_xview[0]+160,view_yview[0]+26,": "+string(global.xp_level))
//34 3  global._xp_level=1

draw_set_halign(fa_right)




/*
if room=room_level_lab
{
draw_text(view_xview[0]+view_wview[0]-4,view_yview[0]+4,"Area: "+string(global.level_im_on))
draw_text(view_xview[0]+view_wview[0]-4,view_yview[0]+16,"Kills: "+string(global.total_kills))
draw_set_font(fnt_words)
draw_set_halign(fa_left)
if global.my_sec&lt;10{draw_text(view_xview[0]+8,view_yview[0]+42,"Time: "+string(global.my_min)+":0"+string(global.my_sec))}
else{draw_text(view_xview[0]+8,view_yview[0]+42,"Time: "+string(global.my_min)+":"+string(global.my_sec))}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="79">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if keyboard_check(ord('K'))
{
p=instance_create(mouse_x,mouse_y,random_gun)
p.image_single=97
}
if keyboard_check(ord('C'))
{
p=instance_create(mouse_x+32,mouse_y,weapon_crate)
}

if keyboard_check(ord('S'))
{
p=instance_create(mouse_x+32,mouse_y,swarm_master)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.paused=1{exit}
if instance_exists(player)
{
instance_create(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,bubble_menu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(room_title)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
